// import type { Metadata } from 'next';
// import { Geist, Geist_Mono } from 'next/font/google';
// import './globals.css';
// import { FlightProvider } from '@/context/FlightContext';
// import { NextIntlClientProvider, hasLocale } from 'next-intl';
// import { notFound } from 'next/navigation';
// import { routing } from '@/i18n/routing';

// const geistSans = Geist({
//   variable: '--font-geist-sans',
//   subsets: ['latin'],
// });

// const geistMono = Geist_Mono({
//   variable: '--font-geist-mono',
//   subsets: ['latin'],
// });

// export const metadata: Metadata = {
//   title: 'Create Next App',
//   description: 'Generated by create next app',
// };

// export default async function RootLayout({
//   children,
//   params,
// }: {
//   children: React.ReactNode;
//   params: Promise<{ locale: string }>;
// }) {
//   const { locale } = await params;
//   if (!hasLocale(routing.locales, locale)) {
//     notFound();
//   }
//   return (
//     <html lang={locale}>
//       <body className={`${geistSans.variable} ${geistMono.variable} antialiased`}>
//         <NextIntlClientProvider>
//           <FlightProvider>{children}</FlightProvider>
//         </NextIntlClientProvider>
//       </body>
//     </html>
//   );
// }

import { NextIntlClientProvider, hasLocale } from 'next-intl';
import { notFound } from 'next/navigation';
import { routing } from '@/i18n/routing';
import { FlightProvider } from '@/context/FlightContext';
import './globals.css';
import { Nunito_Sans } from 'next/font/google';
import { cn } from '@/lib/utils';
const nunitoSans = Nunito_Sans({
  subsets: ['latin', 'cyrillic'],
  weight: ['400', '600', '700', '800'],
  variable: '--font-nunito-sans',
});
export default async function LocaleLayout({
  children,
  params,
}: {
  children: React.ReactNode;
  params: Promise<{ locale: string }>;
}) {
  const { locale } = await params;
  if (!hasLocale(routing.locales, locale)) {
    notFound();
  }

  return (
    <html lang={locale}>
      <body className={cn(nunitoSans.className, 'antialiased')}>
        <NextIntlClientProvider>
          <FlightProvider>{children}</FlightProvider>
        </NextIntlClientProvider>
      </body>
    </html>
  );
}
